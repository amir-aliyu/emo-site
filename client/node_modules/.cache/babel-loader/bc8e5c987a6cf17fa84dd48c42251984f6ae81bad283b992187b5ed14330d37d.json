{"ast":null,"code":"import axios from 'axios';\nconst url = 'api/posts/';\nclass PostService {\n  // Get Posts\n  static getPosts() {\n    return new Promise((resolve, reject) => {\n      axios.get(url).then(res => {\n        // new things\n        const data = res.data;\n        if (Array.isArray(data)) {\n          resolve(data.map(post => ({\n            ...post,\n            createdAt: new Date(post.createdAt)\n          })));\n        } else {\n          // If data is not an array, return an empty array\n          resolve([]);\n        }\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n  // Create Post\n  static insertPost(text) {\n    return axios.post(url, {\n      text\n    });\n  }\n\n  // Delete Post\n  static deletePost(id) {\n    return axios.delete(`${url}${id}`);\n  }\n}\nexport default PostService;","map":{"version":3,"names":["axios","url","PostService","getPosts","Promise","resolve","reject","get","then","res","data","Array","isArray","map","post","createdAt","Date","catch","err","insertPost","text","deletePost","id","delete"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/PostService.js"],"sourcesContent":["import axios from 'axios';\n\nconst url='api/posts/';\n\n\nclass PostService {\n    // Get Posts\n    static getPosts() {\n        return new Promise((resolve, reject) => {\n            axios.get(url)\n                .then(res => { // new things\n                    const data = res.data;\n                    if (Array.isArray(data)) {\n                        resolve(data.map(post => ({\n                            ...post,\n                            createdAt: new Date(post.createdAt)\n                        })));\n                    } else {\n                        // If data is not an array, return an empty array\n                        resolve([]);\n                    }\n                })\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n\n    // Create Post\n    static insertPost(text) {\n        return axios.post(url, { text });\n    }\n\n    // Delete Post\n    static deletePost(id) {\n        return axios.delete(`${url}${id}`);\n    }\n}\n\nexport default PostService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAC,YAAY;AAGtB,MAAMC,WAAW,CAAC;EACd;EACA,OAAOC,QAAQA,CAAA,EAAG;IACd,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCN,KAAK,CAACO,GAAG,CAACN,GAAG,CAAC,CACTO,IAAI,CAACC,GAAG,IAAI;QAAE;QACX,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAI;QACrB,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACrBL,OAAO,CAACK,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;YACtB,GAAGA,IAAI;YACPC,SAAS,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACC,SAAS;UACtC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,MAAM;UACH;UACAV,OAAO,CAAC,EAAE,CAAC;QACf;MACJ,CAAC,CAAC,CACDY,KAAK,CAACC,GAAG,IAAI;QACVZ,MAAM,CAACY,GAAG,CAAC;MACf,CAAC,CAAC;IACV,CAAC,CAAC;EACN;;EAEA;EACA,OAAOC,UAAUA,CAACC,IAAI,EAAE;IACpB,OAAOpB,KAAK,CAACc,IAAI,CAACb,GAAG,EAAE;MAAEmB;IAAK,CAAC,CAAC;EACpC;;EAEA;EACA,OAAOC,UAAUA,CAACC,EAAE,EAAE;IAClB,OAAOtB,KAAK,CAACuB,MAAM,CAAE,GAAEtB,GAAI,GAAEqB,EAAG,EAAC,CAAC;EACtC;AACJ;AAEA,eAAepB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}