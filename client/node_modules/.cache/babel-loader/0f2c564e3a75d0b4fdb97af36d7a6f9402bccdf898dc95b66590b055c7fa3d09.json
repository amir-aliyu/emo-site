{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from './assets/emo-image.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Emo logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PostComponent = _resolveComponent(\"PostComponent\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_hoisted_1, _createVNode(_component_PostComponent), _createVNode(_component_v_btn, {\n      \"prepend-icon\": \"mdi-plus\",\n      color: \"primary\",\n      onClick: _ctx.openAddTaskDialog\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Find My Emo-Sona \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"]), _createCommentVNode(\" <EmoDialog\\n          v-if=\\\"isAddDialogOpen\\\"\\n          :is-add-dialog-open=\\\"isAddDialogOpen\\\"\\n          @add-task=\\\"addTask\\\"\\n          @no-task=\\\"closeAddTaskDialog\\\"\\n          @close=\\\"closeAddTaskDialog\\\"\\n          @update:isAddDialog=\\\"isAddDialog = $event\\\" \\n        />\")]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","alt","src","_createBlock","_component_v_container","default","_withCtx","_hoisted_1","_createVNode","_component_PostComponent","_component_v_btn","color","onClick","_ctx","openAddTaskDialog","_createTextVNode","_","_createCommentVNode"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/App.vue"],"sourcesContent":["<template>\n  <v-container> \n    <img alt=\"Emo logo\" src=\"./assets/emo-image.png\">\n    <PostComponent/>\n    <v-btn prepend-icon=\"mdi-plus\" color=\"primary\"  @click=\"openAddTaskDialog\">\n            Find My Emo-Sona\n    </v-btn>\n    <!-- <EmoDialog\n          v-if=\"isAddDialogOpen\"\n          :is-add-dialog-open=\"isAddDialogOpen\"\n          @add-task=\"addTask\"\n          @no-task=\"closeAddTaskDialog\"\n          @close=\"closeAddTaskDialog\"\n          @update:isAddDialog=\"isAddDialog = $event\" \n        />-->\n   \n</v-container>\n  \n  \n</template>\n\n<script>\nimport PostComponent from './components/PostComponent.vue'\n//import EmoDialog from './components/EmoDialog.vue';\nimport 'vuetify/dist/vuetify.min.css';\n\nexport default {\n  name: 'App',\n  components: {\n    PostComponent,\n    /*EmoDialog\n  },data() {\n    return {\n      isAddDialogOpen: true // Initialize dialog state\n    }\n  },\n  methods: {\n    openAddTaskDialog() {\n      this.isAddDialogOpen = true; // Open dialog when button is clicked\n    },\n    addTask() {\n      // Define your addTask method logic here\n      console.log(\"Task added!\");\n      this.isAddDialogOpen = false; // Close dialog after adding task\n    },\n    closeAddTaskDialog() {\n      this.isAddDialogOpen = false; // Close dialog when canceled or closed\n    }*/\n  }\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.jacquard-24-regular {\n  font-family: \"Jacquard 24\", system-ui;\n  font-weight: 400;\n  font-style: normal;\n}\n</style>\n"],"mappings":";OAEwBA,UAA4B;gCAAhDC,mBAAA,CAAiD;EAA5CC,GAAG,EAAC,UAAU;EAACC,GAA4B,EAA5BH;;;;;;uBADtBI,YAAA,CAeYC,sBAAA;IAhBdC,OAAA,EAAAC,QAAA,CAEI,MAAiD,CAAjDC,UAAiD,EACjDC,YAAA,CAAgBC,wBAAA,GAChBD,YAAA,CAEQE,gBAAA;MAFD,cAAY,EAAC,UAAU;MAACC,KAAK,EAAC,SAAS;MAAGC,OAAK,EAAEC,IAAA,CAAAC;;MAJ5DT,OAAA,EAAAC,QAAA,CAI+E,MAE3E,CANJS,gBAAA,CAI+E,oBAE3E,E;MANJC,CAAA;oCAOIC,mBAAA,gSAOS,C;IAdbD,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}