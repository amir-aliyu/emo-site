{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from './assets/emo-image.png';\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"eater-regular\"\n}, \"Enter Your Secrets...\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Emo logo\",\n  src: _imports_0\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PostComponent = _resolveComponent(\"PostComponent\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_hoisted_1, _hoisted_2, _createVNode(_component_PostComponent), _createCommentVNode(\"<v-btn prepend-icon=\\\"mdi-plus\\\" color=\\\"primary\\\"  @click=\\\"openAddTaskDialog\\\">\\n            Find My Emo-Sona\\n    </v-btn>\"), _createCommentVNode(\" <EmoDialog\\n          v-if=\\\"isAddDialogOpen\\\"\\n          :is-add-dialog-open=\\\"isAddDialogOpen\\\"\\n          @add-task=\\\"addTask\\\"\\n          @no-task=\\\"closeAddTaskDialog\\\"\\n          @close=\\\"closeAddTaskDialog\\\"\\n          @update:isAddDialog=\\\"isAddDialog = $event\\\" \\n        />\"), _createCommentVNode(\" for notifications \"), _createVNode(_component_v_snackbar, {\n      modelValue: _ctx.snackbar.show,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.snackbar.show = $event),\n      color: _ctx.snackbar.color,\n      timeout: _ctx.snackbar.timeout,\n      class: \"custom-snackbar\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.snackbar.message), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"color\", \"timeout\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_imports_0","_createElementVNode","class","alt","src","_createBlock","_component_v_container","default","_withCtx","_hoisted_1","_hoisted_2","_createVNode","_component_PostComponent","_createCommentVNode","_component_v_snackbar","modelValue","_ctx","snackbar","show","_cache","$event","color","timeout","_createTextVNode","_toDisplayString","message","_"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/App.vue"],"sourcesContent":["<template>\n  <v-container> \n    <h1 class=\"eater-regular\">Enter Your Secrets...</h1>\n    <img alt=\"Emo logo\" src=\"./assets/emo-image.png\">\n    <PostComponent/>\n\n    <!--<v-btn prepend-icon=\"mdi-plus\" color=\"primary\"  @click=\"openAddTaskDialog\">\n            Find My Emo-Sona\n    </v-btn>-->\n    \n    <!-- <EmoDialog\n          v-if=\"isAddDialogOpen\"\n          :is-add-dialog-open=\"isAddDialogOpen\"\n          @add-task=\"addTask\"\n          @no-task=\"closeAddTaskDialog\"\n          @close=\"closeAddTaskDialog\"\n          @update:isAddDialog=\"isAddDialog = $event\" \n        />-->\n  \n        <!-- for notifications -->\n        <v-snackbar\n          v-model=\"snackbar.show\"\n          :color=\"snackbar.color\"\n          :timeout=\"snackbar.timeout\"\n          class=\"custom-snackbar\"\n        >\n          {{ snackbar.message }}\n        </v-snackbar>\n</v-container>\n  \n  \n</template>\n\n<script>\nimport PostComponent from './components/PostComponent.vue'\n//import EmoDialog from './components/EmoDialog.vue';\nimport 'vuetify/dist/vuetify.min.css';\n\nexport default {\n  name: 'App',\n  components: {\n    PostComponent,\n    /*EmoDialog\n  },data() {\n    return {\n      isAddDialogOpen: true // Initialize dialog state\n    }\n  },\n  methods: {\n    openAddTaskDialog() {\n      this.isAddDialogOpen = true; // Open dialog when button is clicked\n    },\n    addTask() {\n      // Define your addTask method logic here\n      console.log(\"Task added!\");\n      this.isAddDialogOpen = false; // Close dialog after adding task\n    },\n    closeAddTaskDialog() {\n      this.isAddDialogOpen = false; // Close dialog when canceled or closed\n    }*/\n  }\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Jacquard, Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #1e2a37;\n  margin-top: 60px;\n}\n.almendra-sc-regular {\n  font-family: \"Almendra SC\", serif;\n  font-weight: 400;\n  font-style: normal;\n}\n.eater-regular {\n  font-family: \"Eater\", serif;\n  font-weight: 400;\n  font-style: normal;\n  color:rgb(78, 4, 107);\n}\n\n\n</style>\n"],"mappings":";OAGwBA,UAA4B;gCADhDC,mBAAA,CAAoD;EAAhDC,KAAK,EAAC;AAAe,GAAC,uBAAqB;gCAC/CD,mBAAA,CAAiD;EAA5CE,GAAG,EAAC,UAAU;EAACC,GAA4B,EAA5BJ;;;;;;uBAFtBK,YAAA,CA2BYC,sBAAA;IA5BdC,OAAA,EAAAC,QAAA,CAEI,MAAoD,CAApDC,UAAoD,EACpDC,UAAiD,EACjDC,YAAA,CAAgBC,wBAAA,GAEhBC,mBAAA,iIAEW,EAEXA,mBAAA,gSAOS,EAELA,mBAAA,uBAA0B,EAC1BF,YAAA,CAOaG,qBAAA;MA3BrBC,UAAA,EAqBmBC,IAAA,CAAAC,QAAQ,CAACC,IAAI;MArBhC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBmBJ,IAAA,CAAAC,QAAQ,CAACC,IAAI,GAAAE,MAAA;MACrBC,KAAK,EAAEL,IAAA,CAAAC,QAAQ,CAACI,KAAK;MACrBC,OAAO,EAAEN,IAAA,CAAAC,QAAQ,CAACK,OAAO;MAC1BpB,KAAK,EAAC;;MAxBhBK,OAAA,EAAAC,QAAA,CA0BU,MAAsB,CA1BhCe,gBAAA,CAAAC,gBAAA,CA0BaR,IAAA,CAAAC,QAAQ,CAACQ,OAAO,iB;MA1B7BC,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}