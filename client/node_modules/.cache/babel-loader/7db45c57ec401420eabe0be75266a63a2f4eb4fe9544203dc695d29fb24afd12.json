{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"taskText\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_banner = _resolveComponent(\"v-banner\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_textarea = _resolveComponent(\"v-textarea\");\n  const _component_v_radio = _resolveComponent(\"v-radio\");\n  const _component_v_radio_group = _resolveComponent(\"v-radio-group\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_form = _resolveComponent(\"v-form\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createBlock(_component_v_dialog, {\n    modelValue: $setup.isAddDialogVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.isAddDialogVisible = $event),\n    \"max-width\": \"500px\",\n    persistent: \"\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_createVNode(_component_v_banner, {\n          icon: $props.whichIcon,\n          id: \"taskBanner\",\n          \"bg-color\": \"primary\",\n          lines: \"one\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, _toDisplayString($props.isAddOrEdit), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"icon\"]), _createVNode(_component_v_card_text, null, {\n          default: _withCtx(() => [_createVNode(_component_v_form, {\n            onSubmit: _withModifiers($setup.addTask, [\"prevent\"])\n          }, {\n            default: _withCtx(() => [_withDirectives(_createVNode(_component_v_text_field, {\n              modelValue: $setup.newTask.title,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newTask.title = $event),\n              label: \"Title\",\n              rules: [() => !!$setup.newTask.title.trim() || 'Title is required', () => $setup.isTitleUnique.value || 'Title must be unique']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), [[_vShow, $props.showTitle]]), _createCommentVNode(\" do not display title if it is not add \"), _createVNode(_component_v_textarea, {\n              modelValue: $setup.newTask.description,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newTask.description = $event),\n              label: \"Description\",\n              rules: [() => !!$setup.newTask.description.trim() || 'Description is required']\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _withDirectives(_createVNode(_component_v_text_field, {\n              modelValue: $setup.newTask.deadline,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.newTask.deadline = $event),\n              label: \"Deadline\",\n              rules: [() => !!$setup.newTask.deadline.trim() || 'Deadline is required'],\n              type: \"date\"\n            }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"]), [[_vShow, $setup.isAddDialog]]), _createVNode(_component_v_radio_group, {\n              modelValue: $setup.newTask.priority,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.newTask.priority = $event),\n              row: \"\",\n              rules: [() => !!$setup.newTask.priority.trim() || 'Priority is required']\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_radio, {\n                value: \"High\",\n                label: \"High\"\n              }), _createVNode(_component_v_radio, {\n                value: \"Medium\",\n                label: \"Medium\"\n              }), _createVNode(_component_v_radio, {\n                value: \"Low\",\n                label: \"Low\"\n              })]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"modelValue\", \"rules\"]), _createVNode(_component_v_btn, {\n              id: \"right-btn\",\n              \"prepend-icon\": $props.whichIcon,\n              type: \"submit\",\n              color: \"primary\",\n              onClick: _cache[4] || (_cache[4] = $event => $setup.addTask($props.taskIndex, $props.showTitle, $props.tableRows))\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($props.whichButton), 1 /* TEXT */)]),\n              _: 1 /* STABLE */\n            }, 8 /* PROPS */, [\"prepend-icon\"]), _createCommentVNode(\" Cancel button \"), _createVNode(_component_v_btn, {\n              id: \"cancel\",\n              color: \"red\",\n              \"prepend-icon\": \"mdi mdi-close-circle-outline\",\n              onClick: $setup.cancelAddTask\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"Cancel\")]),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"]);\n}","map":{"version":3,"names":["id","_createBlock","_component_v_dialog","modelValue","$setup","isAddDialogVisible","_cache","$event","persistent","default","_withCtx","_createVNode","_component_v_card","_component_v_container","_component_v_banner","icon","$props","whichIcon","lines","_createElementVNode","_hoisted_1","_toDisplayString","isAddOrEdit","_","_component_v_card_text","_component_v_form","onSubmit","_withModifiers","addTask","_component_v_text_field","newTask","title","label","rules","trim","isTitleUnique","value","showTitle","_createCommentVNode","_component_v_textarea","description","deadline","type","isAddDialog","_component_v_radio_group","priority","row","_component_v_radio","_component_v_btn","color","onClick","taskIndex","tableRows","_createTextVNode","whichButton","cancelAddTask"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/components/EmoDialog.vue"],"sourcesContent":["<template>\n    <v-dialog v-model=\"isAddDialogVisible\" max-width=\"500px\" persistent>\n     \n      <v-card>\n        <v-container>\n          <v-banner :icon =\"whichIcon\" id=\"taskBanner\" bg-color=\"primary\" lines=\"one\">\n              <div id=\"taskText\">{{ isAddOrEdit }}</div> </v-banner>\n        <v-card-text >\n          <v-form @submit.prevent=\"addTask\">\n             <v-text-field\n              v-show=\"showTitle\"\n              v-model=\"newTask.title\"\n              label=\"Title\"\n              :rules=\"[() => !!newTask.title.trim() || 'Title is required', () => isTitleUnique.value || 'Title must be unique']\"\n            ></v-text-field>\n        \n            <!-- do not display title if it is not add -->\n            <v-textarea\n              v-model=\"newTask.description\"\n              label=\"Description\"\n              :rules=\"[() => !!newTask.description.trim() || 'Description is required']\"\n            ></v-textarea>\n           \n            <v-text-field\n            v-show=\"isAddDialog\" \n              v-model=\"newTask.deadline\"\n              label=\"Deadline\"\n              :rules=\"[() => !!newTask.deadline.trim() || 'Deadline is required']\"\n              type=\"date\"\n            ></v-text-field>\n  \n            <v-radio-group v-model=\"newTask.priority\" row\n            :rules=\"[() => !!newTask.priority.trim() || 'Priority is required']\">\n              <v-radio value=\"High\" label=\"High\"></v-radio>\n              <v-radio value=\"Medium\" label=\"Medium\"></v-radio>\n              <v-radio value=\"Low\" label=\"Low\"></v-radio>\n            </v-radio-group>\n   \n            <v-btn id=\"right-btn\" :prepend-icon=\"whichIcon\" type=\"submit\" color=\"primary\" @click=\"addTask(taskIndex, showTitle,tableRows)\">\n              {{ whichButton }}</v-btn\n            >\n             <!-- Cancel button -->\n            <v-btn id=\"cancel\" color=\"red\" prepend-icon=\"mdi mdi-close-circle-outline\" @click=\"cancelAddTask\">Cancel</v-btn>\n          </v-form>\n        </v-card-text>\n      </v-container>\n      </v-card>\n    \n    </v-dialog>\n  </template>\n  \n  <script setup>\n  import { ref, defineEmits, defineProps } from 'vue';\n  \n  // props\n  const props = defineProps({\n    isAddOrEdit: String,\n    whichButton: String,\n    taskIndex: Number,\n    addedOrUpdated: String,\n    showTitle: Boolean,\n    tableRows: Array,\n    whichIcon: String\n  });\n  \n  // Define a reactive variable for the visibility of the add task dialog\n  const isAddDialogVisible = ref(true);\n  \n  // Define emits for emitting events\n  const emits = defineEmits(['add-task', 'no-task', 'update:isAddDialog', 'update:isEditDialog']);\n  // Define a ref for tracking form submission\n  const formSubmitted = ref(false);\n  \n  // check if the title's unique :3\n  const isTitleUnique = ref(true);\n  \n  // check if there's a description\n  const hasDescription = ref(false);\n  \n  // check if there's a deadline\n  const hasDeadline = ref(false);\n  \n  // check if there's a priority\n  const hasPriority = ref(false);\n  \n  // Define reactive variables for isAddDialog and isEditDialog\n  const isAddDialog = ref(true);\n  const isEditDialog = ref(false);\n  \n  // Define a reactive object for the new task\n  const newTask = ref({\n    title: '',\n    description: '',\n    deadline: '',\n    priority: '',\n  });\n  \n  const uniqueTitle = (newTask, tableRows) => {\n    for(let i = 0; i < tableRows.length; i++) {\n      if (newTask.value.title == tableRows[i].title) {\n        \n        isTitleUnique.value = false;\n       \n        return false;\n      }\n    }\n    isTitleUnique.value = true;\n    return true;\n  }\n  \n  const newTaskIsValid = (newTask) => {\n    if (newTask.value.title.trim() !== '' &&\n      newTask.value.description.trim() !== '' ) {\n        return true;\n      } else\n      \n      return false;\n  }\n  \n  const validateDescription = (newTask) => {\n    if (newTask.value.description.trim() !== '') {\n      hasDescription.value = true;\n      return true;\n    } else {\n      hasDescription.value = false;\n      return false;\n    }\n  }\n  \n  const validateDeadline = (newTask) => {\n    if (newTask.value.deadline.trim() !== '') {\n      hasDeadline.value = true;\n      return true;\n    } else {\n      hasDeadline.value = false;\n      return false;\n    }\n  }\n  \n  const validatePriority = (newTask) => {\n    if (newTask.value.priority.trim() !== '') {\n      hasPriority.value = true;\n      return true;\n    } else {\n      hasPriority.value = false;\n      return false;\n    }\n  }\n  \n  \n  // Method to add a new task\n  const addTask = (index, showTitle, tableRows) => {\n    formSubmitted.value = true;\n  \n    // If the form is valid, emit 'add-task' event\n      // If showTitle is false, set the newTask.title to its current title\n      if (!showTitle) {\n       // alert(tableRows[index].title);\n        newTask.value.title = tableRows[index].title;\n  \n        // validate entries \n        // update the task accordingly with new values\n  \n        if (\n          validateDescription(newTask) && \n          validateDeadline(newTask) && \n          validatePriority(newTask)\n          ) {\n        emits('add-task', {\n              title: newTask.value.title,\n              description: newTask.value.description,\n              deadline: newTask.value.deadline,\n              priority: newTask.value.priority,\n            });\n            // Clear the new task data\n            newTask.value.title = '';\n            newTask.value.description = '';\n            newTask.value.deadline = '';\n            newTask.value.priority = '';\n            // Close the dialog\n            isAddDialogVisible.value = false;\n            // Reset formSubmitted flag\n            formSubmitted.value = true;\n            }\n      } \n      // title is shown, go thru add validation\n      else if (showTitle) {\n        if (\n            newTaskIsValid(newTask) && uniqueTitle(newTask, tableRows) \n            && validateDeadline(newTask) && validatePriority(newTask)\n          ) {\n            emits('add-task', {\n              title: newTask.value.title,\n              description: newTask.value.description,\n              deadline: newTask.value.deadline,\n              priority: newTask.value.priority,\n            });\n            // Clear the new task data\n            newTask.value.title = '';\n            newTask.value.description = '';\n            newTask.value.deadline = '';\n            newTask.value.priority = '';\n            // Close the dialog\n            isAddDialogVisible.value = false;\n            // Reset formSubmitted flag\n            formSubmitted.value = true;\n            \n            showSnackbar('Task added successfully', 'success');\n  \n          } \n      }\n    \n  };\n  \n  // Method to cancel adding a task\n  const cancelAddTask = () => {\n    // Emit 'no-task' event to inform the parent component to close the dialog\n    emits('no-task');\n    formSubmitted.value = false;\n  };\n  \n  </script>\n  \n  <style>\n  .error-input .v-text-field__details {\n    color: red; /* Error message color */\n  }\n  \n  .error-input .v-input__control {\n    border-color: red; /* Border color for input */\n  }\n  \n  /* Regular textarea fields */\n  .v-textarea__slot textarea {\n    border: 1px solid #ccc !important; /* Regular border color */\n    border-radius: 4px !important; /* Regular border radius */\n    padding: 8px 12px !important; /* Regular padding */\n    font-size: 16px !important; /* Regular font size */\n  }\n  #taskBanner {\n    font-size: 25px;\n   \n  }\n  #taskText {\n    font-size: 25px;\n    margin-left: 1em;\n    margin-right:5em;\n  }\n  #right-btn {\n    margin-left: 8em;\n  \n  }\n  #cancel {\n    margin-left: 1em;\n    margin-right:1em;\n  }\n  \n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}