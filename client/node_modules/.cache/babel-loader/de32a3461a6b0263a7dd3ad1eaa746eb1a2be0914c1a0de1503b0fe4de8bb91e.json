{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport PostComponent from './components/PostComponent.vue';\nimport EmoDialog from './components/EmoDialog.vue';\nimport 'vuetify/dist/vuetify.min.css';\nexport default {\n  name: 'App',\n  components: {\n    PostComponent,\n    EmoDialog\n  }\n};\n\n// Define ref for isAddDialogOpen\nconst isAddDialogOpen = ref(false);\n\n// const to check wether its an add or edit\nconst isAddOrEdit = ref(\"Add Task default\");\n\n// reference for which button it is\nconst whichButton = ref(\"Add\");\nconst taskIndex = ref(0);\n\n// Define whether it's an add or edit dialog\nconst isEditDialog = ref(true);\nconst isAddDialog = ref(true);\n\n// determine whether or not to add title\nconst showTitle = ref(true);\n\n// say it was added or updated successfully\nconst addedOrUpdated = ref(\"added\");\n\n// Define your table rows data\nconst tableRows = ref([]);\nconst whichIcon = ref(\"mdi-plus\");\n\n// open task dialog, pass in whether it's an add task and index\nconst openAddTaskDialog = isAdd => {\n  isAddDialogOpen.value = true;\n};\n\n// Method to close the add task dialog\nconst closeAddTaskDialog = () => {\n  isAddDialogOpen.value = false;\n};\n\n// Method to handle adding task\nconst addTask = (task, index) => {\n  //taskIndex.value = index;\n  isAddOrEdit.value = \"Add Task from app.vue\";\n  isAddDialog.value = true;\n  isEditDialog.value = false;\n  if (taskIndex.value < 0) {\n    tableRows.value.push(task);\n  } else {\n    tableRows.value[taskIndex.value] = task;\n  }\n  closeAddTaskDialog();\n};","map":{"version":3,"names":["ref","PostComponent","EmoDialog","name","components","isAddDialogOpen","isAddOrEdit","whichButton","taskIndex","isEditDialog","isAddDialog","showTitle","addedOrUpdated","tableRows","whichIcon","openAddTaskDialog","isAdd","value","closeAddTaskDialog","addTask","task","index","push"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/App.vue"],"sourcesContent":["<template>\n  <v-container> \n    <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n    <PostComponent/>\n    <v-btn prepend-icon=\"mdi-plus\" color=\"primary\"  @click=\"openAddTaskDialog\">\n            Find My Emo-Sona\n          </v-btn>\n    <EmoDialog\n          v-if=\"isAddDialogOpen\"\n          @add-task=\"addTask\"\n          @no-task=\"closeAddTaskDialog\"\n          @close=\"closeAddTaskDialog\"\n          :whichButton = \"whichButton\"\n          :taskIndex = \"taskIndex\"\n          :isAddOrEdit = \"isAddOrEdit\"\n          :isAddDialog= \"isAddDialog\" \n          :isEditDialog=\"isEditDialog\" \n          :showTitle = \"showTitle\"\n          :addedOrUpdated = \"addedOrUpdated\"\n          :tableRows = \"tableRows\"\n          :whichIcon = \"whichIcon\"\n        \n          @update:isAddDialog=\"isAddDialog = $event\" \n          @update:isEditDialog=\"isEditDialog = $event\" \n        />\n</v-container>\n  \n  \n</template>\n\n<script>\nimport { ref } from 'vue';\nimport PostComponent from './components/PostComponent.vue'\nimport EmoDialog from './components/EmoDialog.vue';\nimport 'vuetify/dist/vuetify.min.css';\n\nexport default {\n  name: 'App',\n  components: {\n    PostComponent,\n    EmoDialog\n  }\n}\n\n// Define ref for isAddDialogOpen\nconst isAddDialogOpen = ref(false);\n\n// const to check wether its an add or edit\nconst isAddOrEdit = ref(\"Add Task default\");\n\n// reference for which button it is\nconst whichButton = ref(\"Add\");\n\nconst taskIndex = ref(0);\n\n// Define whether it's an add or edit dialog\nconst isEditDialog = ref(true);\n\nconst isAddDialog = ref(true);\n\n// determine whether or not to add title\nconst showTitle = ref(true);\n\n// say it was added or updated successfully\nconst addedOrUpdated = ref(\"added\");\n\n// Define your table rows data\nconst tableRows = ref([]);\n\nconst whichIcon = ref(\"mdi-plus\");\n\n// open task dialog, pass in whether it's an add task and index\nconst openAddTaskDialog = (isAdd) => {\n  isAddDialogOpen.value = true;\n \n};\n\n// Method to close the add task dialog\nconst closeAddTaskDialog = () => {\n  isAddDialogOpen.value = false;\n};\n\n// Method to handle adding task\nconst addTask = (task, index) => {\n  //taskIndex.value = index;\n  isAddOrEdit.value = \"Add Task from app.vue\";\n  isAddDialog.value = true; \n  isEditDialog.value = false; \n  if(taskIndex.value < 0) {\n    tableRows.value.push(task);\n  } else {\n    tableRows.value[taskIndex.value] = task;\n  }\n  \n  closeAddTaskDialog();\n  \n  \n};\n\n\n\n\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";AA+BA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,aAAY,MAAO,gCAA+B;AACzD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAO,8BAA8B;AAErC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,aAAa;IACbC;EACF;AACF;;AAEA;AACA,MAAMG,eAAc,GAAIL,GAAG,CAAC,KAAK,CAAC;;AAElC;AACA,MAAMM,WAAU,GAAIN,GAAG,CAAC,kBAAkB,CAAC;;AAE3C;AACA,MAAMO,WAAU,GAAIP,GAAG,CAAC,KAAK,CAAC;AAE9B,MAAMQ,SAAQ,GAAIR,GAAG,CAAC,CAAC,CAAC;;AAExB;AACA,MAAMS,YAAW,GAAIT,GAAG,CAAC,IAAI,CAAC;AAE9B,MAAMU,WAAU,GAAIV,GAAG,CAAC,IAAI,CAAC;;AAE7B;AACA,MAAMW,SAAQ,GAAIX,GAAG,CAAC,IAAI,CAAC;;AAE3B;AACA,MAAMY,cAAa,GAAIZ,GAAG,CAAC,OAAO,CAAC;;AAEnC;AACA,MAAMa,SAAQ,GAAIb,GAAG,CAAC,EAAE,CAAC;AAEzB,MAAMc,SAAQ,GAAId,GAAG,CAAC,UAAU,CAAC;;AAEjC;AACA,MAAMe,iBAAgB,GAAKC,KAAK,IAAK;EACnCX,eAAe,CAACY,KAAI,GAAI,IAAI;AAE9B,CAAC;;AAED;AACA,MAAMC,kBAAiB,GAAIA,CAAA,KAAM;EAC/Bb,eAAe,CAACY,KAAI,GAAI,KAAK;AAC/B,CAAC;;AAED;AACA,MAAME,OAAM,GAAIA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC/B;EACAf,WAAW,CAACW,KAAI,GAAI,uBAAuB;EAC3CP,WAAW,CAACO,KAAI,GAAI,IAAI;EACxBR,YAAY,CAACQ,KAAI,GAAI,KAAK;EAC1B,IAAGT,SAAS,CAACS,KAAI,GAAI,CAAC,EAAE;IACtBJ,SAAS,CAACI,KAAK,CAACK,IAAI,CAACF,IAAI,CAAC;EAC5B,OAAO;IACLP,SAAS,CAACI,KAAK,CAACT,SAAS,CAACS,KAAK,IAAIG,IAAI;EACzC;EAEAF,kBAAkB,CAAC,CAAC;AAGtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}