{"ast":null,"code":"import PostService from '../PostService';\nexport default {\n  name: 'PostComponent',\n  // no props\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    };\n  },\n  async created() {\n    try {\n      this.posts = await PostService.getPosts();\n    } catch (err) {\n      this.error = err.message;\n    }\n  },\n  methods: {\n    async createPost() {\n      await PostService.insertPost(this.text);\n      this.posts = await PostService.getPosts();\n    },\n    async deletePost(id) {\n      await PostService.deletePost(id);\n      this.posts = await PostService.getPosts();\n    }\n  }\n};","map":{"version":3,"names":["PostService","name","data","posts","error","text","created","getPosts","err","message","methods","createPost","insertPost","deletePost","id"],"sources":["/Users/ammaaliyu/Documents/GitHub/emo-site/client/src/components/PostComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <head>\n      Emo Site...\n    </head>\n    <h1 class=\"jacquard-24-regular\">Speak Your Truth</h1>\n    \n    <div class=\"create-post\">\n      <!--<label for=\"create-post\">Speak into the void...</label>-->\n      <input type=\"text\" id=\"create-post\" v-model=\"text\" placeholder=\"Speak into the void...\"> \n      <!--bind text at bottom to input w/ v-model-->\n      <br>\n      <v-btn variant=\"outlined\" v-on:click=\"createPost\">Speak Your Truth!</v-btn>\n    </div>\n\n    <hr>\n    <p class=\"error\" v-if=\"error\"> {{  error  }}</p>\n    <div class=\"posts-container\">\n      <div class=\"post\"\n        v-for=\"(post, index) in posts\"\n        v-bind:item=\"post\"\n        v-bind:index=\"index\"\n        v-bind:key=\"post._id\" \n        v-on:dblclick=\"deletePost(post._id)\"\n      >\n      {{ `${post.createdAt.getDate()}/${post.createdAt.getMonth()}/${post.createdAt.getFullYear()}` }}\n    <p class=\"text\">{{  post.text  }}</p></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostService from '../PostService';\n\nexport default {\n  name: 'PostComponent',\n  // no props\n  data() {\n    return {\n      posts: [],\n      error: '',\n      text: ''\n    }\n  },\n  async created() {\n    try {\n      this.posts = await PostService.getPosts();\n    } catch(err) {\n      this.error = err.message;\n    }\n  }, methods: {\n    async createPost() {\n      await PostService.insertPost(this.text);\n      this.posts = await PostService.getPosts();\n    },\n    async deletePost(id) {\n      await PostService.deletePost(id);\n      this.posts = await PostService.getPosts();\n    } \n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ndiv.container { \n  max-width: 800px; \n  margin: 0 \n  auto; \n}\n\np.error { border: 1px solid #ff5b5f; background-color: #b220cc; padding: 10px; margin-bottom: 15px; }\n\ndiv.post { position: relative; border: 1px solid #5bd658; background-color: 3bcffb8; padding: 10px 10px 30px 10px; margin-bottom: 15px; }\n\ndiv.created-at { position: absolute; top: 0; left: 0; padding: 5px 15px 5px 15px; background-color: darkgreen; }\n\np.text { font-size: 22px; font-weight: 700; margin-bottom: 0; }\n\n.jacquard-24-regular {\n  font-family: \"Jacquard 24\", system-ui;\n  font-weight: 400;\n  font-style: normal;\n}\n\n.almendra-sc-regular {\n  font-family: \"Almendra SC\", serif;\n  font-weight: 400;\n  font-style: normal;\n}\n\n\n\n</style>\n"],"mappings":"AAgCA,OAAOA,WAAU,MAAO,gBAAgB;AAExC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrB;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE;IACR;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,IAAI,CAACH,KAAI,GAAI,MAAMH,WAAW,CAACO,QAAQ,CAAC,CAAC;IAC3C,EAAE,OAAMC,GAAG,EAAE;MACX,IAAI,CAACJ,KAAI,GAAII,GAAG,CAACC,OAAO;IAC1B;EACF,CAAC;EAAEC,OAAO,EAAE;IACV,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMX,WAAW,CAACY,UAAU,CAAC,IAAI,CAACP,IAAI,CAAC;MACvC,IAAI,CAACF,KAAI,GAAI,MAAMH,WAAW,CAACO,QAAQ,CAAC,CAAC;IAC3C,CAAC;IACD,MAAMM,UAAUA,CAACC,EAAE,EAAE;MACnB,MAAMd,WAAW,CAACa,UAAU,CAACC,EAAE,CAAC;MAChC,IAAI,CAACX,KAAI,GAAI,MAAMH,WAAW,CAACO,QAAQ,CAAC,CAAC;IAC3C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}